<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="yao.homebank.mapper.PaymentsMapper" >
	<resultMap type="Payments" id="paymentsResultMap">
		<id property="id" column="id"/>
		<result property="value" column="value"/>
		<result property="name" column="name"/>
        <result property="paymenttype" column="paymenttype"/>
        <result property="unit" column="unit"/>
        <result property="descript" column="descript"/>
        <result property="day" column="day"/>
        <result property="crttime" column="crttime"/>
        <result property="type" column="type"/>
        <result property="unitname" column="unitname"/>
        <result property="typename" column="typename"/>
	</resultMap>
	
	<select id="queryPage" parameterType="Map" resultType="list" resultMap="paymentsResultMap">
		select * from payments
		<trim prefix="where" prefixOverrides="and | or">
		<if test="paymenttype != null">
			paymenttype = #{paymenttype}
		</if>
		<if test="name != null">    
            and name like #{name}    
        </if>    
        <if test="type != null">    
            and type = #{type}    
        </if>    
        <if test="day != null">    
            and day = #{day}    
        </if>  
		</trim>
		order by day desc
	</select>
	
	<select id="getTotal" parameterType="Map" resultType="Integer">
		select count(*) from payments
		<trim prefix="where" prefixOverrides="and |or">    
        <if test="paymenttype != null">    
            paymenttype = #{paymenttype}    
        </if>    
        <if test="name != null">    
            and name like #{name}    
        </if>    
        <if test="type != null">    
            and type = #{type}    
        </if>    
        <if test="day != null">    
            and day = #{day}    
        </if>    
        </trim>
	</select>
	<insert id="addPayments" parameterType="Payments">
        insert into payments(value,name,paymenttype,unit,descript,day,crttime,type)
        values (#{value},#{name},#{paymenttype},#{unit},#{descript},#{day},#{crttime},#{type})
    </insert>
    <delete id="delPayments" parameterType="String" >
        delete from  payments where id = #{id}
    </delete>
    <select id="getPaymentsById" parameterType="String" resultType="Payments">
        select * from payments where id = #{id}
    </select>
    <update id="updatePayments" parameterType="Payments">
        update payments set name = #{name},value = #{value},unit = #{unit},type = #{type},descript = #{descript}
        where id = #{id}
    </update>
</mapper>




